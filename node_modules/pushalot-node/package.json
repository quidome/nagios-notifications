{
  "author": {
    "name": "Dennis Timmermann",
    "email": "timmermann.dennis@googlemail.com",
    "url": "http://github.com/dennistimmermann"
  },
  "name": "pushalot-node",
  "description": "easily access the pushalot push API (http://pushalot.com/)",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/dennistimmermann/pushalot-node.git"
  },
  "bugs": {
    "url": "https://github.com/dennistimmermann/pushalot-node/issues"
  },
  "main": "pushalot-node.js",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "tags": [
    "push",
    "pushalot",
    "windows phone",
    "windows 8",
    "api",
    "notification",
    "toast"
  ],
  "readme": "# pushalot-node #\n\n## About #\npushalot-node is a very small NodeJS module for the Pushalot REST API (http://pushalot.com) to push notifications (toasts) to Windows 8 and Windows Phone with a straight forward API.\n\n## Requirements #\nTo send notifications to a device you need to obtain the corresponding authorization token. To test the service and send notifications to your own device you can use your default \"api\" token (https://pushalot.com/manager/authorizations) or create a custom app (https://pushalot.com/manager/apps).\n\n## Usage #\n```javascript\nvar Pushalot = require('pushalot-node')\n\nvar client = new Pushalot( \"aBcDEfAuthorizationToken\" )\n\nclient.push('I am a test notification')\n.on('success', function ( code , res ) {\n  //\n})\n.on('error', function (code , res ) {\n  //\n})\n```\n\n### new Pushalot(token) #\nThe Pushalot method requires an authorization token and returns a client object\n\n```javascript\nvar client = new Pushalot(authorizationToken)\n```\n\n### client.push(...) #\nIn order to send notifications to the user, simply call `push` on the client.\nThe `push` method exposes different signatures\n\n#### client.push(message, [title], [args]) #\n\n```javascript\n/**\n * @param {String} message    message that will be sent\n * @param {String} [title]    notification title\n * @param {Object} [args]     prepared object with additional information\n */\nclient.push(message, title, args)\n\n// examples\nclient.push('just testing')\nclient.push('another test', 'Headline')\nclient.push('something happened', 'Important', {IsImportant: true})\n```\n\n#### client.push(args) ##\n\n```javascript\n/**\n * @param {Object} args         prepared object with all information\n */\nclient.push(args)\n\n// example\nclient.push({ Body: 'text'\n            , Title: 'Title'\n            , Link: 'http://www.reddit.com/r/pushalot/'\n            })\n```\n\nPlease see the Pushalot API (http://pushalot.com/api) docs for information on the available keys/values for the `args` object\n\n### Events #\n`push` returns an `EventEmitter` so you can easily listen to the result\n\n```javascript\nvar toast = client.push('my cat can eat a whole watermelon')\n```\n\n#### toast.on('success', cb) #\n```javascript\n/**\n * @param   {Number}  code      HTTP statusCode\n * @param   {String}  res       body of response (may contain additional information)\n */\ntoast.on('success', function ( code, res ) {\n    //...\n})\n```\n\n`code` will always be `200` on success\n#### toast.on('error', cb) #\n```javascript\n/**\n * @param   {Number}  code      HTTP statusCode\n * @param   {String}  res       body of response (may contain additional information)\n */\ntoast.on('error', function ( code, res ) {\n    //...\n})\n```\n\nIf something went wrong, you can lookup the `code` at the Pushalot API (http://pushalot.com/api#basics) to debug your application. The response body (`res`) may also contain helpful information.\n\n### Pushalot.source #\nIn case you want to display a custom application-wide source name instead of the registered name of your app, just assign a string to `Pushalot.source`\n\n```javascript\n var Pushalot = require('pushalot-node')\n\n Pushalot.source = 'my application'\n ``` \n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/dennistimmermann/pushalot-node",
  "_id": "pushalot-node@0.0.1",
  "_from": "pushalot-node@"
}
